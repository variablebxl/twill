(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{460:function(e,o,a){"use strict";a.r(o);var r=a(38),t=Object(r.a)({},(function(){var e=this,o=e.$createElement,a=e._self._c||o;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"role-crop-params"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#role-crop-params"}},[e._v("#")]),e._v(" Role & Crop Params")]),e._v(" "),a("p",[e._v("Each "),a("em",[e._v("Module")]),e._v(" in your application can have its own predefined image "),a("em",[e._v("crops")]),e._v(" and "),a("em",[e._v("roles")]),e._v(".")]),e._v(" "),a("p",[e._v("A "),a("em",[e._v("role")]),e._v(" is a way to define different contexts in which a image might be placed. For example, roles for a "),a("code",[e._v("People")]),e._v(" model could be "),a("code",[e._v("profile")]),e._v(" and "),a("code",[e._v("cover")]),e._v(". This would allow you to include your People model in list and show a cover image for each, or show an single person model with a profile image. You can associate any number of image roles with your Model.")]),e._v(" "),a("p",[a("em",[e._v("Crops")]),e._v(" are more self-explanatory. Twill comes with some pre-defined crop settings to allow you to set different variants of a given image, so crops can be used in combination with "),a("em",[e._v("roles")]),e._v(" or they can be used on their own with a single role to define multiple cropping ratios on the same image.")]),e._v(" "),a("p",[e._v("Using the Person example, your "),a("code",[e._v("cover")]),e._v(" image could have a "),a("code",[e._v("square")]),e._v(" crop for mobile screens, but could use a "),a("code",[e._v("16/9")]),e._v(" crop on larger screens. Those values are editable at your convenience for each model, even if there are already some crops created in the CMS.")]),e._v(" "),a("p",[e._v("The only thing you have to do to make it work is to compose your model and repository with the appropriate traits, respectively "),a("code",[e._v("HasMedias")]),e._v(" and "),a("code",[e._v("HandleMedias")]),e._v(", setup your "),a("code",[e._v("$mediasParams")]),e._v(" configuration and use the "),a("code",[e._v("medias")]),e._v(" form partial in your form view (more info in the CRUD section).")]),e._v(" "),a("p",[e._v("When it comes to using those data model images in the frontend site, there are a few methods on the "),a("code",[e._v("HasMedias")]),e._v(" trait that will help you to retrieve them for each of your layouts. You can find the full\nreference in the "),a("a",{attrs:{href:"https://twill.io/docs/api/2.x/A17/Twill/Models/Behaviors/HasMedias.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HasMedias API documentation"),a("OutboundLink")],1)])])}),[],!1,null,null,null);o.default=t.exports}}]);